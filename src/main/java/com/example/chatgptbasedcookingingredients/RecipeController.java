package com.example.chatgptbasedcookingingredients;


import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.reactive.function.client.WebClient;

import java.util.List;
import java.util.Objects;

@RestController
@RequestMapping("/recipe")
@RequiredArgsConstructor
public class RecipeController {

    @Value("${app.openai-api-key}")
    private String chatGPTApiKey;


    @PostMapping("/generate")
    Recipe generateRecipe(@RequestBody List<String> ingredients) {

        String prompt = "Create a cooking instruction for a dish using the following ingredients:\n"
                + String.join("\n", ingredients);

        ChatGPTResponse response = Objects.requireNonNull(
                        WebClient.create()
                                .post()
                                .uri("https://api.openai.com/v1/chat/completions")
                                .header("Authorization", "Bearer " + chatGPTApiKey)
                                .bodyValue(
                                        new ChatGPTRequest(
                                                "gpt-3.5-turbo",
                                                List.of(new ChatGPTMessage(
                                                        "user",
                                                        prompt
                                                ))
                                        )
                                )
                                .retrieve()
                                .toEntity(ChatGPTResponse.class)
                                .block())
                .getBody();

        String instructions = "";
        if (response.choices().size() > 0) {
            instructions = response.choices().get(0).message().content();
        }

        return new Recipe("Generated Recipe", "Cooking instructions generated by ChatGPT", ingredients, instructions);

    }



}
